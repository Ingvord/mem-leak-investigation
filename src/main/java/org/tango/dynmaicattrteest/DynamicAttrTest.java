/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.java) ENABLED START -----*/
//=============================================================================
//
// file :        DynamicAttrTest.java
//
// description : Java source for the dynamic attribute DynamicAttrTest.
//               this attribute belongs to the DynmaicAttrTEest class.
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.java

package org.tango.dynmaicattrteest;

import org.tango.DeviceState;
import org.tango.server.StateMachineBehavior;
import org.tango.server.attribute.IAttributeBehavior;
import org.tango.server.attribute.AttributeValue;
import org.tango.server.attribute.AttributeConfiguration;
import org.tango.server.attribute.AttributePropertiesImpl;

//	Import Tango IDL types
import fr.esrf.Tango.*;


/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.addImports) ENABLED START -----*/

/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.addImports


/**
 * Dynamic attribute DynamicAttrTest, String, Scalar, READ
 * description:
 *     
 */
public class DynamicAttrTest implements IAttributeBehavior {

	/**	The attribute name */
	private String  attributeName;

	/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.dataMembers) ENABLED START -----*/
	
	//	Put your data member declarations
	AttributeValue valueToSet=new AttributeValue();
	//AttributeQuality qualityToSet=new AttributeQuality();
	AttrQuality qualityToSet;
	/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.dataMembers

	/**
	 * Dynamic attribute DynamicAttrTest constructor
	 * @param attributeName The dynamic attribute name
	 */
	public DynamicAttrTest(String attributeName) {
		try {
			this.setValue(new AttributeValue("Not Available",AttrQuality.ATTR_WARNING));
		} catch (DevFailed e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.attributeName = attributeName;
	}

	/**
	 * Build and return the configuration for dynamic attribute DynamicAttrTest.
	 * @return the configuration for dynamic attribute DynamicAttrTest.
	 * @throws DevFailed in case of configuration error.
	 */
	@Override
	public AttributeConfiguration getConfiguration() throws DevFailed {
		AttributeConfiguration  config = new AttributeConfiguration();
		config.setName(attributeName);
		config.setType(String.class);
		config.setFormat(AttrDataFormat.SCALAR);
		config.setWritable(AttrWriteType.READ);
		config.setDispLevel(DispLevel.OPERATOR);
		config.setPolled(true);
		config.setPollingPeriod(1000);
	
		//	Set attribute properties
		AttributePropertiesImpl	properties = new AttributePropertiesImpl();
		config.setAttributeProperties(properties);
		return config;
	}

	/**
	 * Get dynamic attribute state machine
	 * @return the attribute state machine
	 * @throws DevFailed if the state machine computation failed.
	 */
	@Override
	public StateMachineBehavior getStateMachine() throws DevFailed {
		StateMachineBehavior stateMachine = new StateMachineBehavior();
		/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.getStateMachine) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.getStateMachine
		return stateMachine;
	}

	/**
	 * Get dynamic attribute value
	 * @return the attribute value
	 * @throws DevFailed if the read value failed.
	 */
	@Override
	public AttributeValue getValue() throws DevFailed {
		String	readValue;
		/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.getValue) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.getValue
//		return new AttributeValue(readValue);
		return valueToSet;
	}

	/**
	 * Set dynamic attribute value
	 * @param writeValue the attribute value
	 * @throws DevFailed if the set value failed.
	 */
	@Override
	public void setValue(AttributeValue writeValue) throws DevFailed {
		/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.setValue) ENABLED START -----*/
		System.out.println("Writing " + writeValue + "to hardware");
		valueToSet.setValue( writeValue.getValue() );
		valueToSet.setQuality(writeValue.getQuality());
		/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.setValue
	}

	/*----- PROTECTED REGION ID(DynmaicAttrTEest.DynamicAttrTest.methods) ENABLED START -----*/
	
	//	Put your own methods
	
	/*----- PROTECTED REGION END -----*/	//	DynmaicAttrTEest.DynamicAttrTest.methods
}
